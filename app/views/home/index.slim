/ Copyright 2013 Square Inc.
/
/    Licensed under the Apache License, Version 2.0 (the "License");
/    you may not use this file except in compliance with the License.
/    You may obtain a copy of the License at
/
/        http://www.apache.org/licenses/LICENSE-2.0
/
/    Unless required by applicable law or agreed to in writing, software
/    distributed under the License is distributed on an "AS IS" BASIS,
/    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/    See the License for the specific language governing permissions and
/    limitations under the License.

- content_for :file_name do
  = 'views/home/index'
- content_for :class do
  = controller_name
- content_for :id do 
  = [controller_name, action_name].join('-')
- content_for :footer do
  true

.header
  h1 Dashboard
  .pull-right
    button.primary href='#add-translation' rel='modal' disabled=Project.count.zero? Request Translation

hr.divider

.border
  - project_list = Project.order('LOWER(name) ASC').map { |pr| [pr.name, pr.id] }
  - project_list.unshift ['projects in my locales', 'my-locales'] if current_user.approved_locales.any?
  - project_list.unshift ['all projects', nil]

  .filter-bar#filter
    - if current_user.approved_locales.any?
      - locales = current_user.approved_locales.map { |locale| [locale.name, locale.rfc5646] }
      - locales.unshift ['my locales', current_user.approved_locales.map(&:rfc5646).join(',')]
      - locales.unshift ['all locales', nil]
    = form_tag({}, id: 'filter', method: 'get')
      .main
        = text_field_tag 'sha', @sha, placeholder: '9d613f'
        = select_tag 'project_id', options_for_select(project_list, params[:project_id])

        - if current_user.monitor?
          = select_tag 'status', options_for_select(\
            %w(all uncompleted completed).map { |n| ["#{n} translations", n] },\
            @status\
          )
        - else
          - if current_user.approved_locales.any?
            = select_tag 'locales', options_for_select(locales, @locales.map(&:rfc5646).join(','))
          - else
            = text_field_tag 'locales', @locales.map(&:rfc5646).join(','), placeholder: 'Locale', class: 'locale-field'

        = submit_tag 'Filter', class: 'primary'
        .pull-right#expand-search
          i.icon-angle-right

      .collapse
        .control-group
          - if current_user.monitor?
            = label_tag 'locales', 'Locales', class: 'control-label'
            .controls
              - if current_user.approved_locales.any?
                = select_tag 'locales', options_for_select(locales, @locales.map(&:rfc5646).join(','))
              - else
                = text_field_tag 'locales', @locales.map(&:rfc5646).join(','), placeholder: 'Locale', class: 'locale-field'
          - else
            = label_tag 'status', 'Project Status', class: 'control-label'
            .controls
              = select_tag 'status', options_for_select(\
                %w(all uncompleted completed).map { |n| ["#{n} translations", n] },\
                @status\
              )

          .controls
            = check_box_tag 'email', current_user.email, params[:email] == current_user.email
            | Only commits from me
          .controls
            = check_box_tag 'exported', 'true', params[:exported] == 'true'
            | Include exported commits

  table.table.hover-rows#commits 
    thead
      tr
        th 
        th Project
        th Due Date
        th Priority
        th Description
        th Translate
        th Review
        th Links
        th SHA
        - if current_user.translator?
          th 
    tbody 
      - @commits.each do |commit|
        tr.row_class
          / Project Status
          ruby: 
            if commit.loading?
              commit_state = 'commit-loading'
            elsif commit.ready?
              commit_state = 'commit-ready'
            else
              commit_state = 'commit-translating'
            end
          td class=commit_state

          / Project Name
          td = commit.project.name

          / Project Due Date
          td.due-date class=("centered" if !commit.due_date)
            - if current_user.admin?
              = form_for commit, url: project_commit_url(commit.project, commit, format: 'json') do |f|
                = f.text_field  :due_date, \
                                value: (f.object.due_date.strftime('%m/%d/%Y') if !f.object.due_date.nil?),\
                                class: 'datepicker'
            - else 
              - if commit.due_date
                ruby: 
                  date_class =  if commit.due_date < 2.days.from_now.to_date
                                  'due-date-very-soon'
                                elsif commit.due_date < 5.days.from_now.to_date
                                  'due-date-soon'
                                else
                                  nil
                                end
                span class="#{date_class}" = l(commit.due_date, format: :mon_day_year)
              - else 
                | -

          / Project Priority
          td.centered
            - if current_user.admin?
              = form_for commit, url: project_commit_url(commit.project, commit, format: 'json') do |f|
                = f.select :priority, \
                            t('models.commit.priority').to_a.map(&:reverse).unshift(['-', nil]), \
                            {}, \
                            class: 'styled'
            - else
              - if commit.priority
                span class="commit-priority-#{commit.priority}" 
                  | P 
                  = t("models.commit.priority.#{commit.priority}")
              - else
                | -

          / Project Description
          td class=("centered" if !commit.description)
            ruby:
              description = commit.description
              full_description = nil
              if commit.description
                full_description = description.dup
                if commit.user
                  full_description << "<br><strong>Requested by " + mail_to(commit.user.email, commit.user.abbreviated_name) + "</strong>"
                end
                full_description << "<br><strong>Created on #{commit.created_at.strftime('%B %d, %Y')}</strong>"
              end
            div.description[data-full-description=full_description data-short-description=truncate(description || '-', length: 50)]
              = truncate(description || '-', length: 50)

          / Word Translation Count
          td = "#{number_with_delimiter commit.translations_new(*@locales)}s (#{number_with_delimiter commit.words_new(*@locales)}w)"

          / Word Review Count
          td = "#{number_with_delimiter commit.translations_pending(*@locales)}s (#{number_with_delimiter commit.words_pending(*@locales)}w)"
          td class=("centered" if !commit.github_url and !commit.pull_request_url)
            - if commit.github_url or commit.pull_request_url
              - if commit.github_url
                = link_to "Code", commit.github_url
              - if commit.pull_request_url
                - if commit.github_url
                  = " / "
                = link_to 'PR', commit.pull_request_url
            - else
              | -

          / Links (Pull Request, Github)
          td 
            = link_to commit.revision[0, 6], project_commit_url(commit.project, commit)

          / Translation Button
          - if current_user.translator?
            - if current_user.role == 'admin'
              td
                - locale = commit.project.required_locales.any? ? commit.project.required_locales.first.rfc5646 : "fr"
                input.submit.translate-link[
                  type="button"
                  data-sha=commit.revision 
                  data-project=commit.project.to_param
                  data-locale=locale
                  value="Translate"]
            - elsif current_user.approved_locales.any?
              td 
                - locale = current_user.approved_locales.first
                input.submit.translate-link[
                  type="button"
                  data-sha=commit.revision 
                  data-project=commit.project.to_param
                  data-locale=locale.rfc5646
                  value="Translate"] 
            - else 
              td
                button.submit disabled="disabled" No locales 

.row 
  .pagination-links
    = paginate @commits
.row
  .pagination-info= page_entries_info(@commits)

- if Project.count > 0
  .row
    .modal.twelve.columns#add-translation
      a.close Ã—
      - projects = Project.order('LOWER(name) ASC')
      = form_for(Commit.new, url: project_commits_path(projects.first, format: 'json')) do |f|
        h2 Translation Request
        .modal-body
          .half
            .control-group
              = label_tag 'new_commit_project_id', Commit.human_attribute_name(:project_id), class: 'control-label'
              .controls
                = select_tag 'new_commit_project_id', options_for_select(projects.map { |pr| [pr.name, pr.to_param] }), required: true
            .control-group
              = f.label :revision, class: 'control-label'
              .controls
                = f.text_field :revision, required: true
            .control-group
              = f.label :due_date, class: 'control-label'
              .controls
                = f.text_field :due_date, class: 'datepicker'
            .control-group
              = f.label :pull_request_url, class: 'control-label'
              .controls
                = f.text_field :pull_request_url
          .half
            .control-group
              = f.label :description, class: 'control-label'
              .controls
                = f.text_area :description, rows: 7
            = f.submit class: 'primary'
